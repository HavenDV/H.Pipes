<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netstandard2.1;net4.6.1;net5.0;net6.0</TargetFrameworks>
    <NoWarn>$(NoWarn);CA1031</NoWarn>
  </PropertyGroup>

  <PropertyGroup Label="NuGet">
    <Description>Features:
- Create named pipe servers that can handle multiple client connections simultaneously.
- Send strongly-typed messages between clients and servers: any serializable .NET object can be sent over a pipe and will be automatically serialized/deserialized, including cyclical references and complex object graphs.
- Async
- Requires .NET Standard 2.0
- Supports large messages - up to 300 MiB.
- Server restart automatically
- Automatically wait for the release of the pipe for the server, if it is already in use
- Automatically waiting for a server pipe creating when client connecting
- Automatic reconnect with a given interval and at each `client.WriteAsync`, if necessary
- Supports variable formatters, default - BinaryFormatter which uses System.Runtime.Serialization.BinaryFormatter inside
- Also available ready formatters in separate nuget packages: H.Formatters.Json
- Supports `PipeAccessRule`'s(see `H.Pipes.AccessControl` nuget package) or more complex code to access using the `PipeServer.PipeStreamInitializeAction` property
    </Description>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net4.6.1' ">
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\H.Formatters.BinaryFormatter\H.Formatters.BinaryFormatter.csproj" />
  </ItemGroup>
  
</Project>