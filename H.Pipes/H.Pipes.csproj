<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>netstandard2.1;netstandard2.0;</TargetFrameworks>
    <LangVersion>8</LangVersion>
    <Nullable>enable</Nullable>
    <AssemblyTitle>Named Pipe Wrapper library</AssemblyTitle>
    <AssemblyDescription>A simple, easy to use, strongly-typed wrapper around .NET named pipes.</AssemblyDescription>
    <Version>1.0.1</Version>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>key.snk</AssemblyOriginatorKeyFile>
    <PackageId>H.Pipes</PackageId>
    <Description>Create named pipe servers that can handle multiple client connections simultaneously.


Send strongly-typed messages between clients and servers: any serializable .NET object can be sent over a pipe and will be automatically serialized/deserialized, including cyclical references and complex object graphs.
Supports variable formatters, default - System.Runtime.Serialization.BinaryFormatter


Supports large messages - up to 300 MiB.


Requires .NET Standard 2.0</Description>
    <Authors>havendv</Authors>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageLicenseFile></PackageLicenseFile>
    <PackageProjectUrl>https://github.com/HavenDV/H.Pipes</PackageProjectUrl>
    <RepositoryUrl>https://github.com/HavenDV/H.Pipes</RepositoryUrl>
    <PackageTags>pipes, named pipes, async, async named pipes, namedpipes async, namedpipes, pipes async</PackageTags>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="1.1.0" Condition="'$(TargetFramework)' == 'netstandard2.0'" />
  </ItemGroup>
  
</Project>